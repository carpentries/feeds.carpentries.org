name: build and deploy data feeds

on:
  push:
    branches: main
  pull_request:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  build-feeds:
    if: github.repository_owner == 'carpentries'
    runs-on: ubuntu-20.04
    env:
      RSPM: "https://packagemanager.rstudio.com/all/__linux__/focal/latest"
      REDASH_KEY_QUERY33: ${{ secrets.REDASH_KEY_QUERY33 }}
      REDASH_KEY_QUERY39: ${{ secrets.REDASH_KEY_QUERY39 }}
      REDASH_KEY_QUERY157: ${{ secrets.REDASH_KEY_QUERY157 }}
      REDASH_KEY_QUERY168: ${{ secrets.REDASH_KEY_QUERY168 }}
      REDASH_KEY_QUERY184: ${{ secrets.REDASH_KEY_QUERY184 }}
      REDASH_KEY_QUERY187: ${{ secrets.REDASH_KEY_QUERY187 }}
      REDASH_KEY_QUERY295: ${{ secrets.REDASH_KEY_QUERY295 }}
      REDASH_KEY_QUERY400: ${{ secrets.REDASH_KEY_QUERY400 }}
      REDASH_KEY_QUERY298: ${{ secrets.REDASH_KEY_QUERY298 }}
      REDASH_KEY_QUERY523: ${{ secrets.REDASH_KEY_QUERY523}}
      REDASH_KEY_QUERY524: ${{ secrets.REDASH_KEY_QUERY524}}
      AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
      REDASH_API_INSTRUCTORS_KEY: ${{ secrets.REDASH_API_INSTRUCTORS_KEY }}
      MAILCHIMP_NEWSLETTER_KEY: ${{ secrets.MAILCHIMP_NEWSLETTER_KEY }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      EXIT_STATUS: 0

    defaults:
      run:
        shell: bash

    steps:
      - name: checkout the Repository
        uses: actions/checkout@v3


      ### Install R ------------------------------------------------------------
      
      - name: "Set up R"
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          install-r: false

      - name: Install Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Setup Apt
        run: sudo apt update -y

      - name: Set up dependencies
        uses: r-lib/actions/setup-r-dependencies@v2

      ### Install Ruby ---------------------------------------------------------

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Install Bundler
        run: >-
          gem install bundler

      - name: Set up caching for Bundler
        uses: actions/cache@v3
        with:
          path: .vendor/bundle
          key: gems-${{ hashFiles('**/Gemfile') }}
          restore-keys: |
            gems-

      - name: Install & Update Ruby Gems
        run: |
          bundle config path .vendor/bundle
          bundle install --jobs 4 --retry 3
          bundle update


      ### Install Python -------------------------------------------------------

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python modules
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install --user numpy scipy matplotlib ipython jupyter pandas plotly requests pycountry

      ### Finally --------------------------------------------------------------

      - name: Make workshops
        run: |
          make workshops || (echo "EXIT_STATUS=2" >> $GITHUB_ENV && echo 'an error occured; skipping workshops')
      - name: Make members
        run: |          
          make members || (echo "EXIT_STATUS=2" >> $GITHUB_ENV && echo 'an error occured; skipping members')
      - name: Make amy_curricula
        run: | 
          make amy_curricula || (echo "EXIT_STATUS=2" >> $GITHUB_ENV && echo 'an error occured; skipping curricula')
      - name: Make newsletter
        run: |
          make newsletter || (echo "EXIT_STATUS=2" >> $GITHUB_ENV && echo 'an error occured; skipping newsletter')
      - name: Make plots
        run: |
          make plots || (echo "EXIT_STATUS=2" >> $GITHUB_ENV && echo 'an error occured; skipping plots')
      - name: Make incubator
        run: |
          make incubator || (echo "EXIT_STATUS=2" >> $GITHUB_ENV && echo 'an error occured; skipping incubator')
      - name: Make help-wanted
        run: |
          make help-wanted || (echo "EXIT_STATUS=2" >> $GITHUB_ENV && echo 'an error occured; skipping help-wanted issues')
      - name: Make lessons
        run: |
          make lessons || (echo "EXIT_STATUS=2" >> $GITHUB_ENV && echo 'an error occured; skipping lessons feed')
      - name: Make memberships
        run: |
          make memberships || (echo "EXIT_STATUS=2" >> $GITHUB_ENV && echo 'an error occured; skipping memberships')
      - name: Make site
        run: make site

      - name: Deploy to AWS S3
        if: ${{ github.event_name != 'pull_request' }}
        id: deploy
        uses: fmichonneau/s3-sync-action@log-output
        with:
          args: --acl public-read --follow-symlinks --delete --exclude "*.xml" --exclude "404.html"
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: _site/

      ### Post actions ---------------------------------------------------------

      - name: Ping Healthcheck when successful
        if: ${{ github.event_name != 'pull_request' && success() }}
        run: |
          curl -fsS --retry 3 ${{ secrets.HEALTHCHECK_URL }}/${{ env.EXIT_STATUS }}

      - name: Ping Healthcheck when failure
        if: ${{ github.event_name != 'pull_request' && failure() }}
        run: |
          curl -fsS --retry 3 ${{ secrets.HEALTHCHECK_URL }}/fail
